<!--
        Pure ant versions of the scala, scalac and scaladoc commands. 
        
        WARNING: These are not the same as those that were formerly
        distributed with scala; but they are good enough for use
        in the (very) straightforward project builds I used the
        distributed commands with.
        
        Bernard Sufrin, Oxford. July 2021
-->

<project name="ant-scala">
    <!-- Default values for properties if unset in driver file -->
    <property name="scalac.flags"        value="-deprecation -unchecked"/>
    <property name="scalac.language"     value="-feature -language:implicitConversions -language:postfixOps"/>
    <property name="scalac.params"       value="-Xelide-below 350"/>
    <property name="scalac.classpathref" value="scalac.classpath"/>
    <property name="scala.classpathref"  value="scala.classpath"/>

    <macrodef name="scalac">
        <!--
           <scalac destdir      ="${build.dir}" 
                   flags        ="${scalac.flags}"
                   language     ="${scalac.language}"
                   params       ="${scalac.params}"
                   compileid    ="${scalac.compileid}"
                   classpathref ="${scalac.classpathref}"
           />                   
        -->
        <attribute name="destdir"      default="${build.dir}"/>            
        <attribute name="flags"        default="${scalac.flags}"/>                          
        <attribute name="language"     default="${scalac.language}"/>                          
        <attribute name="params"       default="${scalac.params}"/>        
        <attribute name="compileid"    description="the id of the fileset that is to be compiled"/>        
        <attribute name="indirect-file" default="${build.dir}/scalac-arguments"/>        
        <attribute name="classpathref"  default="${scalac.classpathref}"/>        
        <attribute name="timestamp"     default=""/> 

        <sequential>
            <local name="classpath"/>
            <local name="compileset"/>
            <pathconvert property="classpath"  pathsep=":" refid="@{classpathref}"/>
            <pathconvert property="compileset" pathsep=" " refid="@{compileid}"/>
            <echo message="Compiling ${compileset} to @{destdir}"/>
            <delete file="@{indirect-file}"/>
            <echo file="@{indirect-file}" append="false" message=" "/>                
            <echo file="@{indirect-file}" append="true" message=" -d  '@{destdir}'"   />
            <echo file="@{indirect-file}" append="true" message=" -cp '${classpath}'" />
            <echo file="@{indirect-file}" append="true" message=" @{params}"      />
            <echo file="@{indirect-file}" append="true" message=" @{flags}"       />
            <echo file="@{indirect-file}" append="true" message=" @{language}"    />
            <echo file="@{indirect-file}" append="true" message=" ${compileset}" />                
            <execute-and-timestamp executable="scalac" 
                                   arg="@{indirect-file}" 
                                   timestamp="@{timestamp}"/>
        </sequential>
    </macrodef>
    
    <macrodef name="scalacc">
        <!--
           <scalacc destdir      ="${build.dir}" 
                    flags        ="${scalac.flags}"
                    language     ="${scalac.language}"
                    params       ="${scalac.params}"
                    classpathref ="${scalac.classpathref}">
              <include ...>
              <exclude ...>
           </scalac>                  
        -->
        <attribute name="destdir"      default="${build.dir}"/>            
        <attribute name="sourcedir"    description="the folder in which the include > source files are found"/>            
        <attribute name="flags"        default="${scalac.flags}"/>                          
        <attribute name="language"     default="${scalac.language}"/>                          
        <attribute name="params"       default="${scalac.params}"/>        
        <attribute name="classpathref" default="${scalac.classpathref}"/>  
        <attribute name="indirect-file"  default="${build.dir}/scalacc-arguments"/>        
        <attribute name="timestamp"      default=""/> 
        <element   name="scalacc-files"  implicit="yes"/>     

        <sequential>
            
            <fileset id="compile" dir="@{sourcedir}">
               <scalacc-files/>
            </fileset>
            <local name="classpath"/>
            <local name="compileset"/>
            <pathconvert property="classpath"  pathsep=":" refid="@{classpathref}"/>
            <pathconvert property="compileset" pathsep=" " refid="compile"/>
            <echo message="Compiling ${compileset} to @{destdir}"/>
            <delete file="@{indirect-file}"/>
            <echo file="@{indirect-file}" append="false" message=" "/>                
            <echo file="@{indirect-file}" append="true" message=" -d  '@{destdir}'"   />
            <echo file="@{indirect-file}" append="true" message=" -cp '${classpath}'" />
            <echo file="@{indirect-file}" append="true" message=" @{params}"      />
            <echo file="@{indirect-file}" append="true" message=" @{flags}"       />
            <echo file="@{indirect-file}" append="true" message=" @{language}"    />
            <echo file="@{indirect-file}" append="true" message=" ${compileset}" />                
            <execute-and-timestamp executable="scalac" 
                                   arg="@{indirect-file}" 
                                   timestamp="@{timestamp}"/> 
        </sequential>
    </macrodef>
    
    <macrodef name="scaladoc">
        <!--
           <scaladoc destdir    ="${build.dir}" 
                   flags        ="${scalac.flags}"
                   language     ="${scalac.language}"
                   params       ="${scalac.params}"
                   compile      ="${scalac.compile}"
                   compileid    ="${scalac.compileid}"
                   classpathref ="${scalac.classpathref}"
                   doc-title    ="${LIBRARY}"
                   doc-version  ="${VERSION}"
           />
                   
        -->
        <attribute name="destdir"      />            
        <attribute name="flags"        default="${scalac.flags}"/>                          
        <attribute name="language"     default="${scalac.language}"/>                          
        <attribute name="params"       default="${scalac.params}"/>        
        <attribute name="compileid"    default="${scalac.compileid}"/>        
        <attribute name="classpathref" default="${scalac.classpathref}"/>        
        <attribute name="indirect-file" default="${build.dir}/scaladoc-arguments"/>        
        <attribute name="doc-title"     default="${LIBRARY}"/>        
        <attribute name="doc-version"   default="${VERSION}"/>        
        <attribute name="timestamp"     default=""/> 

        <sequential>
            <local name="classpath"/>
            <local name="compileset"/>
            <pathconvert property="classpath"  pathsep=":" refid="@{classpathref}"/>
            <pathconvert property="compileset" pathsep=" " refid="@{compileid}"/>
            <echo message="Documenting ${compileset} to @{destdir}"/>
            <echo file="@{indirect-file}" append="false" message="-d  '@{destdir}'"   />
            <echo file="@{indirect-file}" append="true" message=" -cp '${classpath}'" />
            <echo file="@{indirect-file}" append="true" message=" -doc-title '@{doc-title}'"      />
            <echo file="@{indirect-file}" append="true" message=" -doc-version '@{doc-version}'"      />
            <echo file="@{indirect-file}" append="true" message=" @{flags}"       />
            <echo file="@{indirect-file}" append="true" message=" @{language}"    />
            <echo file="@{indirect-file}" append="true" message=" ${compileset}" />                
            <execute-and-timestamp executable="scaladoc" 
                                   arg="@{indirect-file}" 
                                   timestamp="@{timestamp}"/>
        </sequential>
    </macrodef>
    
    <macrodef name="execute-and-timestamp">
       <attribute name="executable"/>
       <attribute name="arg"/>
       <attribute name="timestamp"/>
       <sequential>
            <!-- <echo message="EX+TS: @{executable} @{timestamp} @{arg}"/> -->
            
            <exec dir="${basedir}" executable="@{executable}" failonerror="true">
               <arg line="@@@{arg}"  />
            </exec>
            <touch file="${build.dir}/@{timestamp}"/>
       </sequential>
    </macrodef>
    
    <macrodef name="whenuptodate">
        <attribute name="refid"/>                          
        <attribute name="uptodate"/>  
        <sequential>
           <uptodate property="@{uptodate}">
               <srcfiles refid="@{refid}"/>
               <mapper type="merge" to="${build.dir}/@{uptodate}"/>
          </uptodate>
        </sequential>                        
    </macrodef>
    
    <!-- THIS DOES NOT WORK AT ALL: WHY? -->
    <macrodef name="whenuptodatetargets">
        <attribute name="refid"/>                          
        <attribute name="uptodate"/>  
        <attribute name="sources"     default="*.scala"/>  
        <attribute name="targets"     default="*.class"/>  
        <sequential>
           <uptodate property="@{uptodate}">
               <srcfiles refid="@{refid}"/>
               <mapper type="glob" from="@{sources}" to="@{targets}"/> <!-- instead of a single uptodate target -->
          </uptodate>
        </sequential>                        
    </macrodef>
    
    <macrodef name="scala" description="run scala">
    <!--
       <scala  classpathref ="${scala.classpathref}" dir="${build.dir}">
               classname arguments
       </scala>                  
    -->
       <text      name="command" trim="true"                            description="effective argument to scala"/>
       <attribute name="classpathref" default="${scala.classpathref}"   description="reference to a classpath"/>        
       <attribute name="dir"          default="${build.dir}"            description="directory to run scala in"/>        
       <sequential>
           <pathconvert property="classpath"  pathsep=":" refid="@{classpathref}"/>
           <exec executable="scala" dir="@{dir}" failonerror="false">
              <arg line="-cp '.:${classpath}' @{command}" />
           </exec>
      </sequential>
    </macrodef>  
      
    <macrodef name="scalatest" description="run a scala program test">
    <!--
       <scala  classpathref ="${scala.classpathref}" dir="${build.dir}" message="">
               classname arguments
       </scala>
    -->
       <text      name="command"      trim="true"/>
       <attribute name="classpathref" default="${scala.classpathref}"/>        
       <attribute name="dir"          default="${build.dir}"/>        
       <attribute name="message"      default=""/>        
       <sequential>
          <pathconvert property="classpath"  pathsep=":" refid="@{classpathref}"/>
          <echo message=""/>
          <echo message="@{command}"/>
          <echo message="@{message}"/>
           <exec executable="scala" dir="@{dir}" failonerror="false">
              <arg line="-cp '.:${classpath}' @{command}" />
           </exec>
           <echo message="-----------------------"/>
      </sequential>
    </macrodef>    
</project>







