#!/bin/bash
#
#  Minimal build script for threadcso and examples, bypassing sbt
#
#  PRECONDITIONS:
#     1. you have downloaded a jdk-20.jdk 
#     2. scala and scalac are versions 2.13.7 or 2.13.8 or higher
#
source $(dirname $0)/configuration.sh
#
#
#
#
function findscala () {
        root=${1-.}
        find $root -name "*.scala" 2>/dev/null
}
scalac="scalac -deprecation -unchecked "
#
#
#
function BUILDER() { 
[ -d $BUILD ] || mkdir $BUILD
rm -rfv $BUILD/*
#
# 1. Compile the macros
echo Compiling Macros
$scalac -d $BUILD            app/src/main/scala/app/App.scala
$scalac -d $BUILD -cp $BUILD app/src/main/scala/app/OPT.scala
$scalac -d $BUILD  $(findscala macros)

# 2. Compile the core code (without tests)
echo Compiling Core 
$scalac -d $BUILD -cp $BUILD $(findscala core/src/main)

# 2.5. Compile the net code (without tests)
echo Compiling net 
$scalac -d $BUILD -cp $BUILD $(findscala logging | grep -v "tests/" )
$scalac -d $BUILD -cp $BUILD $(findscala msgpack | grep -v "tests/" )
$scalac -d $BUILD -cp $BUILD $(findscala net | grep -v "tests/" )

# 3. Make a jar
echo Building $LIBJAR
jar cf $LIBJAR -C $BUILD .
rm -rf $
}

#
#
#
if [ \( "$1" = "-f" \) -o ! \( -f $LIBJAR \) ]
then
   BUILDER
else
   ls -l $LIBJAR
fi

if [ \( "$1" = "-f" \) -o ! \( -f $EXAMPLESJAR \) ]
then
   # 4. Compile the examples
   echo Building $EXAMPLESJAR from examples and manualtests
   $scalac -d $EXAMPLESJAR -cp $LIBJAR $(findscala examples) $(findscala manualtests)
else
   ls -l $EXAMPLESJAR
fi

############################# Runners
sh scripts/makerunners
exit




